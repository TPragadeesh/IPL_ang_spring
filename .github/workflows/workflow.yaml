name: Dockerize

on:
  push:
    branches:
      - main

jobs:
  buildingimages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            backend:
              - 'cricket/**'
            frontend:
              - 'train_app/**'


      - name: setting up java maven
        if: steps.changes.outputs.backend == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        if: steps.changes.outputs.backend == 'true'
        run: |
          cd cricket/cricket
          mvn --batch-mode --update-snapshots verify -Dmaven.test.skip

      - name: Build angular image
        if: steps.changes.outputs.frontend == 'true'
        run: |
          cd train_app
          docker build -t pragadeesht/angular2:latest .

      - name: Build spring image
        if: steps.changes.outputs.backend == 'true'
        run: |
          cd cricket
          docker build -t pragadeesht/spring-app:latest .

      - name: display images
        run: docker images

      - name: docker compose
        if: steps.changes.outputs.backend == 'true'
        run: |
          cd cricket
          cd cricket
          docker compose up -d

      - name: spring boot check
        if: steps.changes.outputs.backend == 'true'
        run: |
          cd cricket
          cd cricket
          mvn test

      - name: Login to  Docker hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker image
        if: steps.changes.outputs.backend == 'true'
        run: |
          docker push pragadeesht/spring-app:latest
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: ./cricket/Dockerfile
#          push: true
#          tags: pragadeesht/spring-app:latest

#      - name: pull springboot
#        if: steps.changes.outputs.backend == 'true'
#        run: docker pull pragadeesht/spring-app:latest
#
#
#      - name: docker images
#        run: docker images

      - name: Build and push angular image
        if: steps.changes.outputs.frontend == 'true'
        run: |
          docker push pragadeesht/angulartest2:latest
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: ./train_app/Dockerfile
#          push: true
#          tags: pragadeesht/angulartest2:latest



  deploy:
    runs-on: self-hosted
    needs:
      - buildingimages
    steps:
      - uses: actions/checkout@v4

      - name: Login to  Docker hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: check images
        run: docker images
      - name: build elastic search image
        run: docker pull docker.elastic.co/elasticsearch/elasticsearch:8.8.1

      - name: build springboot image
        run: docker pull pragadeesht/spring-app:latest

      - name: build angular image
        run: docker pull pragadeesht/angulartest2:latest


      - name: docker compose
        run: |
            cd cricket
            cd cricket
            docker compose up -d


